{"version":3,"file":"static/js/498.b4e6a17b.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/modules/ContactForm/ContactsForm.module.css?cbd9","components/modules/ContactForm/ContactForm.jsx","redux/contact/contact-selectors.js","webpack://react-homework-template/./src/components/modules/Filter/Filter.module.css?02c5","components/modules/Filter/Filter.jsx","webpack://react-homework-template/./src/components/modules/ContactList/ContactsList.module.css?d4ce","components/modules/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Pages/ContactPage/ContactPage.module.css?0a20","components/Pages/ContactPage/ContactPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form__contact\":\"ContactsForm_form__contact__9leX7\",\"form__item\":\"ContactsForm_form__item__YKbE6\",\"form__label\":\"ContactsForm_form__label__gHExV\",\"form__input\":\"ContactsForm_form__input__2h3t0\",\"form__btnAdd\":\"ContactsForm_form__btnAdd__1YAgK\"};","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { postContact } from '../../../redux/contact/contact-operations';\nimport { changeFilter } from '../../../redux/contact/contact-actions';\n\nimport css from './ContactsForm.module.css';\n\nconst ContactsForm = ({ onSubmit, contacts, deleteContact }) => {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(postContact({ name, phone }));\n    dispatch(changeFilter(''));\n    setName('');\n    setPhone('');\n  };\n\n  const onChangeInput = ({ target: { name, value } }) => {\n    if (name === 'name') return setName(value);\n    setPhone(value);\n  };\n\n  return (\n    <div className={css.form__contact}>\n      <form onSubmit={handleSubmit}>\n        <div className={css.form__item}>\n          <label className={css.form__label}>Name:</label>\n          <input\n            className={css.form__input}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={onChangeInput}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            itle=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </div>\n        <div className={css.form__item}>\n          <label className={css.form__label}>Number:</label>\n          <input\n            className={css.form__input}\n            type=\"text\"\n            name=\"number\"\n            value={phone}\n            onChange={onChangeInput}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </div>\n\n        <button className={css.form__btnAdd} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default ContactsForm;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.items;\nexport const getLoading = state => state.contacts.loading;\nexport const getError = state => state.contacts.error;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getFilteredContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) =>\n    contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase()),\n    ),\n);","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__k0KAx\",\"filter__label\":\"Filter_filter__label__Mb+j8\",\"filter__input\":\"Filter_filter__input__IfgYM\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../../redux/contact/contact-selectors';\nimport { changeFilter } from '../../../redux/contact/contact-actions';\n\nimport css from './Filter.module.css';\n\nconst Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <div className={css.filter}>\n      <label className={css.filter__label}>\n        Filter by name:\n        <input\n          className={css.filter__input}\n          type=\"text\"\n          value={filter}\n          onChange={e => dispatch(changeFilter(e.target.value))}\n        />\n      </label>\n    </div>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactsList_list__NRrln\",\"list__items\":\"ContactsList_list__items__HLoHk\",\"list__name\":\"ContactsList_list__name__fn66A\",\"list__btn\":\"ContactsList_list__btn__sFcTf\"};","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilteredContacts } from '../../../redux/contact/contact-selectors';\nimport {\n  getContacts,\n  deleteContact,\n} from '../../../redux/contact/contact-operations';\nimport { changeFilter } from '../../../redux/contact/contact-actions';\nimport css from './ContactsList.module.css';\n\nconst ContactsList = () => {\n  const contacts = useSelector(getFilteredContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]);\n\n  return (\n    <ul className={css.list}>\n      {contacts.map(({ id, name, phone }) => (\n        <li className={css.list__items} key={id}>\n          <p className={css.list__name}>\n            {name}: {phone}\n          </p>\n          <button\n            className={css.list__btn}\n            type=\"button\"\n            onClick={() =>\n              dispatch(deleteContact(id), dispatch(changeFilter('')))\n            }\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactsList;\n\n//  const dispatch = useDispatch();\n\n//     useEffect(() => {\n//         dispatch(getContacts());\n//     }, [dispatch]);\n\n//     const filteredContacts = useSelector(getFilteredContacts);\n\n//     const handleDelete = e => {\n//     e.preventDefault();\n//     dispatch(changeFilter(''));\n//     dispatch(deleteContact(id));\n//   };\n//     return (\n//         <ul className={css.list}>\n//         {filteredContacts.map(contact => (\n//             <li className={css.list__items} key={id}>\n//             <p className={css.list__name}>{name}: {phone}</p>\n//             <button value={id} className={css.list__btn} onClick={handleDelete}>Delete</button>\n//             </li>\n//         ))}\n//         </ul>\n//     );\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ContactPage_container__mZ3W3\",\"containerMenu\":\"ContactPage_containerMenu__v7RUo\",\"title\":\"ContactPage_title__s9Yt1\"};","import { useSelector } from 'react-redux';\n\nimport ContactsForm from 'components/modules/ContactForm/ContactForm';\nimport Filter from 'components/modules/Filter/Filter';\nimport ContactsList from 'components/modules/ContactList/ContactList';\nimport { ColorRing } from 'react-loader-spinner';\nimport { getLoading, getError } from 'redux/contact/contact-selectors';\n\nimport css from './ContactPage.module.css';\n\nconst ContactPage = () => {\n  const isLoading = useSelector(getLoading);\n  const errorMsg = useSelector(getError);\n  return (\n    <div className={css.container}>\n      <div className={css.containerMenu}>\n        <h1 className={css.title}>Phonebook</h1>\n        <ContactsForm />\n        <h2 className={css.title}>Contacts</h2>\n        <Filter />\n        {isLoading && <ColorRing color=\"#ffaa00\" height={80} width={80} />}\n        <ContactsList />\n        {errorMsg && <p>{errorMsg}</p>}\n      </div>\n    </div>\n  );\n};\n\nexport default ContactPage;\n"],"names":["onSubmit","contacts","deleteContact","useState","name","setName","phone","setPhone","dispatch","useDispatch","onChangeInput","target","value","className","css","e","preventDefault","postContact","changeFilter","type","onChange","pattern","itle","required","title","getLoading","state","loading","getError","error","getFilter","filter","getFilteredContacts","createSelector","items","toLowerCase","includes","useSelector","useEffect","getContacts","map","id","onClick","isLoading","errorMsg","color","height","width"],"sourceRoot":""}